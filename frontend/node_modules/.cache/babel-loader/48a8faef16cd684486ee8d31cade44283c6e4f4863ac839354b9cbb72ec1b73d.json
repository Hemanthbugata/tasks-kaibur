{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanthbugata\\\\Desktop\\\\tasks-kabiur\\\\frontend\\\\src\\\\components\\\\TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button, notification } from 'antd';\nimport { fetchTasks, deleteTask } from '../api/taskApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks().then(data => setTasks(data)).catch(error => {\n      if (error instanceof Error) {\n        notification.error({\n          message: 'Error Fetching Tasks',\n          description: error.message\n        });\n      } else {\n        notification.error({\n          message: 'Error Fetching Tasks',\n          description: 'Unknown error occurred'\n        });\n      }\n    });\n  }, []);\n  const handleDelete = async taskId => {\n    try {\n      await deleteTask(taskId);\n      notification.success({\n        message: 'Task Deleted Successfully'\n      });\n      setTasks(tasks.filter(task => task.id !== taskId)); // Remove task from the list\n    } catch (error) {\n      if (error instanceof Error) {\n        notification.error({\n          message: 'Error Deleting Task',\n          description: error.message\n        });\n      } else {\n        notification.error({\n          message: 'Error Deleting Task',\n          description: 'Unknown error occurred'\n        });\n      }\n    }\n  };\n  const columns = [{\n    title: 'Task Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Command',\n    dataIndex: 'command',\n    key: 'command'\n  }, {\n    title: 'Task Executions',\n    key: 'taskExecutions',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      dataSource: record.taskExecutions,\n      columns: [{\n        title: 'Start Time',\n        dataIndex: 'startTime',\n        key: 'startTime'\n      }, {\n        title: 'End Time',\n        dataIndex: 'endTime',\n        key: 'endTime'\n      }, {\n        title: 'Output',\n        dataIndex: 'output',\n        key: 'output'\n      }],\n      pagination: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => handleDelete(record.id),\n      danger: true,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    dataSource: tasks,\n    rowKey: \"id\",\n    columns: columns,\n    pagination: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","notification","fetchTasks","deleteTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","then","data","catch","error","Error","message","description","handleDelete","taskId","success","filter","task","id","columns","title","dataIndex","key","render","_","record","size","dataSource","taskExecutions","pagination","fileName","_jsxFileName","lineNumber","columnNumber","onClick","danger","children","rowKey","_c","$RefreshReg$"],"sources":["C:/Users/Hemanthbugata/Desktop/tasks-kabiur/frontend/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, notification } from 'antd';\r\nimport { fetchTasks, deleteTask } from '../api/taskApi';\r\nimport { Task } from '../types/TaskTypes';\r\n\r\nconst TaskList: React.FC = () => {\r\n  const [tasks, setTasks] = useState<Task[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchTasks()\r\n      .then((data) => setTasks(data))\r\n      .catch((error: unknown) => {\r\n        if (error instanceof Error) {\r\n          notification.error({\r\n            message: 'Error Fetching Tasks',\r\n            description: error.message,\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: 'Error Fetching Tasks',\r\n            description: 'Unknown error occurred',\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = async (taskId: string) => {\r\n    try {\r\n      await deleteTask(taskId);\r\n      notification.success({\r\n        message: 'Task Deleted Successfully',\r\n      });\r\n      setTasks(tasks.filter((task) => task.id !== taskId)); // Remove task from the list\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        notification.error({\r\n          message: 'Error Deleting Task',\r\n          description: error.message,\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: 'Error Deleting Task',\r\n          description: 'Unknown error occurred',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'Task Name', dataIndex: 'name', key: 'name' },\r\n    { title: 'Command', dataIndex: 'command', key: 'command' },\r\n    {\r\n      title: 'Task Executions',\r\n      key: 'taskExecutions',\r\n      render: (_: any, record: Task) => (\r\n        <Table\r\n          size=\"small\"\r\n          dataSource={record.taskExecutions}\r\n          columns={[\r\n            { title: 'Start Time', dataIndex: 'startTime', key: 'startTime' },\r\n            { title: 'End Time', dataIndex: 'endTime', key: 'endTime' },\r\n            { title: 'Output', dataIndex: 'output', key: 'output' },\r\n          ]}\r\n          pagination={false}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (_: any, record: Task) => (\r\n        <Button onClick={() => handleDelete(record.id)} danger>\r\n          Delete\r\n        </Button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Table\r\n      dataSource={tasks}\r\n      rowKey=\"id\"\r\n      columns={columns}\r\n      pagination={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}