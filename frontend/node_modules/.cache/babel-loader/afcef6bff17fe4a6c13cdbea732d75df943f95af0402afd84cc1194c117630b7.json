{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanthbugata\\\\Desktop\\\\tasks-kabiur\\\\frontend\\\\src\\\\components\\\\CommandExecution.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Input, Button, notification } from 'antd';\nimport { executeTask } from '../api/taskApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommandExecution = () => {\n  _s();\n  const [taskId, setTaskId] = useState(''); // Add state for taskId\n  const [command, setCommand] = useState('');\n  const [executionResult, setExecutionResult] = useState('');\n  const handleExecuteCommand = async () => {\n    try {\n      if (!taskId || !command) {\n        notification.error({\n          message: 'Missing information',\n          description: 'Please provide both task ID and command.'\n        });\n        return;\n      }\n\n      // Pass both taskId and command to executeTask\n      const result = await executeTask(taskId, command);\n      if (result) {\n        setExecutionResult(result.output);\n        notification.success({\n          message: 'Command Executed Successfully'\n        });\n      } else {\n        notification.error({\n          message: 'Command Execution Failed'\n        });\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        notification.error({\n          message: 'Error Executing Command',\n          description: error.message\n        });\n      } else {\n        notification.error({\n          message: 'Unknown Error',\n          description: 'An unknown error occurred.'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      value: taskId,\n      onChange: e => setTaskId(e.target.value),\n      placeholder: \"Enter Task ID\",\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: command,\n      onChange: e => setCommand(e.target.value),\n      placeholder: \"Enter Command\",\n      rows: 4,\n      style: {\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleExecuteCommand,\n      style: {\n        marginTop: '10px'\n      },\n      children: \"Execute Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), executionResult && /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        marginTop: '10px',\n        backgroundColor: '#f4f4f4',\n        padding: '10px'\n      },\n      children: executionResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(CommandExecution, \"kb7kwNWZeE9z854xiGnvt9bTr0M=\");\n_c = CommandExecution;\nexport default CommandExecution;\nvar _c;\n$RefreshReg$(_c, \"CommandExecution\");","map":{"version":3,"names":["React","useState","Input","Button","notification","executeTask","jsxDEV","_jsxDEV","CommandExecution","_s","taskId","setTaskId","command","setCommand","executionResult","setExecutionResult","handleExecuteCommand","error","message","description","result","output","success","Error","children","value","onChange","e","target","placeholder","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","TextArea","rows","type","onClick","marginTop","backgroundColor","padding","_c","$RefreshReg$"],"sources":["C:/Users/Hemanthbugata/Desktop/tasks-kabiur/frontend/src/components/CommandExecution.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Input, Button, notification } from 'antd';\r\nimport { executeTask } from '../api/taskApi';\r\n\r\nconst CommandExecution: React.FC = () => {\r\n  const [taskId, setTaskId] = useState('');  // Add state for taskId\r\n  const [command, setCommand] = useState('');\r\n  const [executionResult, setExecutionResult] = useState('');\r\n\r\n  const handleExecuteCommand = async () => {\r\n    try {\r\n      if (!taskId || !command) {\r\n        notification.error({\r\n          message: 'Missing information',\r\n          description: 'Please provide both task ID and command.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Pass both taskId and command to executeTask\r\n      const result = await executeTask(taskId, command);\r\n\r\n      if (result) {\r\n        setExecutionResult(result.output);\r\n        notification.success({\r\n          message: 'Command Executed Successfully',\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: 'Command Execution Failed',\r\n        });\r\n      }\r\n    } catch (error: unknown) {\r\n      if (error instanceof Error) {\r\n        notification.error({\r\n          message: 'Error Executing Command',\r\n          description: error.message,\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: 'Unknown Error',\r\n          description: 'An unknown error occurred.',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Input\r\n        value={taskId}\r\n        onChange={(e) => setTaskId(e.target.value)}\r\n        placeholder=\"Enter Task ID\"\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <Input.TextArea\r\n        value={command}\r\n        onChange={(e) => setCommand(e.target.value)}\r\n        placeholder=\"Enter Command\"\r\n        rows={4}\r\n        style={{ marginBottom: '10px' }}\r\n      />\r\n      <Button type=\"primary\" onClick={handleExecuteCommand} style={{ marginTop: '10px' }}>\r\n        Execute Command\r\n      </Button>\r\n      {executionResult && (\r\n        <pre style={{ marginTop: '10px', backgroundColor: '#f4f4f4', padding: '10px' }}>\r\n          {executionResult}\r\n        </pre>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommandExecution;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}