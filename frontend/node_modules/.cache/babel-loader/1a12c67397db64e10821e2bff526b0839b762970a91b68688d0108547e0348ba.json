{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hemanthbugata\\\\Desktop\\\\tasks-kabiur\\\\frontend\\\\src\\\\components\\\\TaskForm.tsx\",\n  _s = $RefreshSig$();\n// components/TaskForm.tsx\nimport React, { useState } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { createTask } from '../api/taskApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [taskCommand, setTaskCommand] = useState('');\n  const [taskOwner, setTaskOwner] = useState('');\n  const handleCreateTask = async () => {\n    const taskData = {\n      id: 'temp-id',\n      // You should let the backend generate this ID\n      name: taskName,\n      command: taskCommand,\n      owner: taskOwner,\n      taskExecutions: [] // Initially an empty array\n    };\n    try {\n      const response = await createTask(taskData);\n      if (response) {\n        notification.success({\n          message: 'Task Created Successfully'\n        });\n      } else {\n        notification.error({\n          message: 'Error Creating Task'\n        });\n      }\n    } catch (error) {\n      notification.error({\n        message: 'Error Creating Task',\n        description: error.message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      maxWidth: '400px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Task Name\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: taskName,\n        onChange: e => setTaskName(e.target.value),\n        placeholder: \"Enter Task Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Task Command\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: taskCommand,\n        onChange: e => setTaskCommand(e.target.value),\n        placeholder: \"Enter Command\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Task Owner\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        value: taskOwner,\n        onChange: e => setTaskOwner(e.target.value),\n        placeholder: \"Enter Owner Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleCreateTask,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"dfNyErmhJmnGcDmquQhqyMUaFxM=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","Form","Input","Button","notification","createTask","jsxDEV","_jsxDEV","TaskForm","_s","taskName","setTaskName","taskCommand","setTaskCommand","taskOwner","setTaskOwner","handleCreateTask","taskData","id","name","command","owner","taskExecutions","response","success","message","error","description","style","maxWidth","margin","children","Item","label","required","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Hemanthbugata/Desktop/tasks-kabiur/frontend/src/components/TaskForm.tsx"],"sourcesContent":["// components/TaskForm.tsx\r\nimport React, { useState } from 'react';\r\nimport { Form, Input, Button, notification } from 'antd';\r\nimport { createTask } from '../api/taskApi';\r\nimport { Task } from '../types/TaskTypes';\r\n\r\nconst TaskForm: React.FC = () => {\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskCommand, setTaskCommand] = useState('');\r\n  const [taskOwner, setTaskOwner] = useState('');\r\n\r\n  const handleCreateTask = async () => {\r\n    const taskData: Task = {\r\n      id: 'temp-id',  // You should let the backend generate this ID\r\n      name: taskName,\r\n      command: taskCommand,\r\n      owner: taskOwner,\r\n      taskExecutions: [],  // Initially an empty array\r\n    };\r\n\r\n    try {\r\n      const response = await createTask(taskData);\r\n      if (response) {\r\n        notification.success({\r\n          message: 'Task Created Successfully',\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: 'Error Creating Task',\r\n        });\r\n      }\r\n    } catch (error: any) {\r\n      notification.error({\r\n        message: 'Error Creating Task',\r\n        description: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form style={{ maxWidth: '400px', margin: '0 auto' }}>\r\n      <Form.Item label=\"Task Name\" required>\r\n        <Input\r\n          value={taskName}\r\n          onChange={(e) => setTaskName(e.target.value)}\r\n          placeholder=\"Enter Task Name\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Task Command\" required>\r\n        <Input\r\n          value={taskCommand}\r\n          onChange={(e) => setTaskCommand(e.target.value)}\r\n          placeholder=\"Enter Command\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Task Owner\" required>\r\n        <Input\r\n          value={taskOwner}\r\n          onChange={(e) => setTaskOwner(e.target.value)}\r\n          placeholder=\"Enter Owner Name\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" onClick={handleCreateTask}>\r\n          Create Task\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}